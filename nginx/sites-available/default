server {
   listen       81;
    server_name  localhost_resticted;
    root   /home/doki/game-engine/web_root_protected/;
    index  index.html index.htm;
}


server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;
	server_name _;


	location /dev/nginx_status {
    	include dev_ip_lock.conf;
        stub_status;
    }
	
	set $server_ip "127.0.0.1";

	location = /auth {
		proxy_pass_request_body on;#auth lekérés visszaadja a body-t
		proxy_pass_request_headers on;#menjen minden header
		proxy_set_header X-Original-URI $request_uri;#auth lekérés megkapja az eredeti uri-t
		proxy_pass "http://127.0.0.1:8100";#auth url, ami sikeresség esetén 2XX status-al tér vissza, egyéb esetben 401
	}

    location @error401 {
		return 302 "http://${server_ip}/login.html";
    }

	root /home/doki/public;
	index index.html index.htm;

	location /php/
	{
		include dev_ip_lock.conf;
		proxy_pass http://${server_ip}:88$uri$is_args$args;
		proxy_redirect off;
		proxy_pass_request_headers  on;
	}

	location /dev/codiad/ {
		include dev_ip_lock.conf;
		proxy_pass http://127.0.0.1:181/;
		proxy_redirect off;
		proxy_pass_request_headers on;
	}

	location /dev/admins/mongo/ {
		include dev_ip_lock.conf;
		proxy_set_header HOST $host;
		proxy_pass http://127.0.0.1:183;
		proxy_pass_request_headers      on;
	}

	location /dev/admins/graphite/ {
		include dev_ip_lock.conf;
		rewrite ^/dev/admins/graphite/(/.*)$ $1 last;
		proxy_set_header HOST $host;
		proxy_pass http://127.0.0.1:380;
		proxy_pass_request_headers      on;
	}

	location /dev/admins/ {
		include dev_ip_lock.conf;
		proxy_set_header HOST $host;
		proxy_pass_request_headers      on;
		proxy_pass http://127.0.0.1:182/;
	}

	location /dev/portainer/ {
		include dev_ip_lock.conf;
		proxy_redirect off;
		proxy_set_header HOST $host;
		proxy_pass_request_headers      on;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Original-URI $request_uri;#auth lekérés megkapja az eredeti uri-t
		proxy_pass http://127.0.0.1:9000/;
	}

	location /rss/ {
		proxy_pass "http://${server_ip}:281";
		proxy_set_header HOST $host;
		proxy_pass_request_headers      on;
	}

    
    location /dev
    {
    	include dev_ip_lock.conf;
		proxy_set_header Host $host:$server_port;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Original-URI $request_uri;#auth lekérés megkapja az eredeti uri-t
		proxy_pass_request_headers on;
		proxy_pass http://${server_ip}:3000$uri$is_args$args;
    }

	location /php
	{
		satisfy any;    
		include dev_ip_lock.conf;
		auth_basic "Restricted Content";
		auth_basic_user_file /etc/nginx/.htpasswd;
		proxy_set_header Host $host:$server_port;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Original-URI $request_uri;
		proxy_pass_request_headers on;
		proxy_pass http://${server_ip}:88$uri$is_args$args;
	}

	location /engine {
		#try_files $uri $uri/ =404;
		satisfy any;    
		include dev_ip_lock.conf;
		auth_basic "Restricted Content";
		auth_basic_user_file /etc/nginx/.htpasswd;
		rewrite /engine/(.*) /$1  break;
		proxy_set_header Host $host:$server_port;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		#proxy_set_header X-Original-URI $request_uri;
		#proxy_pass http://${server_ip}:8000$uri$is_args$args;
		proxy_pass http://${server_ip}:8000;
    }

	#location @engine_node {
	#	#try_files $uri $uri/ =404;
	#	satisfy any;    
	#	include dev_ip_lock.conf;
	#	auth_basic "Restricted Content";
	#	auth_basic_user_file /etc/nginx/.htpasswd;
	#	proxy_set_header Host $host:$server_port;
	#	proxy_set_header X-Real-IP $remote_addr;
	#	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	#	proxy_set_header X-Original-URI $request_uri;
	#	proxy_pass http://${server_ip}:8000$uri$is_args$args;
    #}
    #error_page 404 = @engine_node;

	location ~ /resticted/ {
		# a resticted url kiszolgálása auth köteles→lefut a /auth rész
		auth_request /auth;#megadjuk, hogy melyik auth fusson le
		#első változó az a név, ami néven hivatkozni akarunk az auth által visszaadott headerre,
		#második változó pedig elérhetővé teszi az auth által küldött "application_header_name" nevet viselő header értékét.
		auth_request_set $auth_application_header_name $upstream_http_application_header_name;
		#első paraméter az a név, ami néven  a megadott proxynak át akarjuk adni a header értéket, második pedig az a változó név, amit az auth_request_set-ben beállításra került.
		proxy_set_header "ilyen_neven_megy_az_ertek" $auth_application_header_name ;
		error_page 401 = @error401;#hiba esetén ez a rész fut le
		proxy_pass "http://${server_ip}:81";#siker esetén ide kerül proxyzásra a kérés
	}
    
	
}